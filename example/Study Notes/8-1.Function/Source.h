
#pragma once

//到目前為止都只使用一個函式（Function），也就是main()主函式，將所有的程式寫在主函式中只適合一些小程式，如果您的程式比較大，您會發現 到有某些程式碼會經常使用，而由於撰寫在同一個主函式中的關係，這些程式碼會一再被重覆的撰寫，對於程式中出現兩次以上被重覆使用的程式片段，您可以將之 定義為函式以便重覆呼叫。
//
//函式用來將程式組織為一個小的、獨立的運行單元，一個函式可以接受資料，並運行其中的算法，最後將結果傳回。
//
//在C++中函式的組成主要包括四個部份：返回值、函式名稱、參數列與函式主體。前三者被稱為函式宣告或函式原型（Function prototype），在C++中規定函式被呼叫之前，必須先作宣告的動作，否則會出現編譯錯誤，函式原型描述的是函式的介面，通常宣告在一個獨立的表頭 檔中，而被含入每一個想要呼叫函式的檔案中，以下是一個函式宣告的範例： 

int pow2(int); 
int pow(int, int);


//在C++中如果呼叫函式不傳回任何值，則宣告為void，若不傳入任何引數，則參數列保持空白即可，雖然您也可以使用void來加以註明，不過這是多此一 舉，事實上，使用void註明參數列不使用其實是C的風格，而在C++中，參數列的空白即表示這個函式不接受任何參數。表頭檔案被儲存為.h檔案，接著您 可以根據函式原型來實作函式主體